name: Build BongoCat artifacts
# https://github.com/ayangweb/BongoCat/blob/0a0d9a508e18c04dc1b6ee4d65c56383c25f5153/.github/workflows/build.yml

on:
  push:
    tags:
      - 'v*'
  pull_request:
    branches: [master]
  workflow_call:
  workflow_dispatch:

jobs:
  create-release:
    runs-on: ubuntu-latest
    if: ${{ github.ref_type == 'tag' }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Set output
        id: vars
        run: echo "tag=${GITHUB_REF#refs/*/}" >> $GITHUB_OUTPUT

      - name: Setup node
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Generate changelog
        id: create_release
        run: npx changelogithub --draft --name ${{ steps.vars.outputs.tag }}
        env:
          GITHUB_TOKEN: ${{ secrets.RELEASE_TOKEN }}

  build-app:
    permissions:
      contents: write
    strategy:
      fail-fast: false
      matrix:
        include:
          - platform: ubuntu-22.04
            target: x86_64-unknown-linux-gnu
          - platform: ubuntu-22.04-arm
            target: aarch64-unknown-linux-gnu

    runs-on: ${{ matrix.platform }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Setup node
        uses: actions/setup-node@v4
        with:
          node-version: 20
      - uses: pnpm/action-setup@v3
        with:
          version: latest

      - name: Install rust target
        run: |
          rustup default stable
          rustup update stable
          rustup target add ${{ matrix.target }}

      - name: Install dependencies (ubuntu only)
        if: startsWith(matrix.platform, 'ubuntu')
        run: |
          sudo apt-get update
          sudo apt-get install -y libwebkit2gtk-4.1-dev libappindicator3-dev librsvg2-dev patchelf xdg-utils libinput-dev

      - name: Install Rust stable
        uses: dtolnay/rust-toolchain@stable

      - name: Rust cache
        uses: swatinem/rust-cache@v2
        with:
          workspaces: target

      - name: Sync node version and setup cache
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: pnpm

      - name: Install app dependencies and build web
        run: pnpm install --frozen-lockfile

      - name: Build BongoCat
        id: build
        uses: tauri-apps/tauri-action@v0
        if: ${{ github.ref_type != 'tag' }}
        env:
          CI: true
          PLATFORM: ${{ matrix.platform }}
          # Signature is exposed here to make sure it works in PR's
          # https://github.com/tauri-apps/tauri-action/blob/dev/.github/workflows/test-action.yml#L165
          TAURI_SIGNING_PRIVATE_KEY: dW50cnVzdGVkIGNvbW1lbnQ6IHJzaWduIGVuY3J5cHRlZCBzZWNyZXQga2V5ClJXUlRZMEl5YTBGV3JiTy9lRDZVd3NkL0RoQ1htZmExNDd3RmJaNmRMT1ZGVjczWTBKZ0FBQkFBQUFBQUFBQUFBQUlBQUFBQWdMekUzVkE4K0tWQ1hjeGt1Vkx2QnRUR3pzQjVuV0ZpM2czWXNkRm9hVUxrVnB6TUN3K1NheHJMREhQbUVWVFZRK3NIL1VsMDBHNW5ET1EzQno0UStSb21nRW4vZlpTaXIwZFh5ZmRlL1lSN0dKcHdyOUVPclVvdzFhVkxDVnZrbHM2T1o4Tk1NWEU9Cg==
        with:
          args: --target ${{ matrix.target }}

      - name: Prepare artifacts
        if: ${{ github.ref_type != 'tag' && matrix.platform != 'windows-latest' && matrix.platform != 'macos-latest' }}
        run: |
          mkdir artifacts
          paths=$(echo '${{ steps.build.outputs.artifactPaths }}' | jq -c '.[]' | sed 's/"//g')
          for fn in $paths; do
            if [[ -f $fn ]]; then
              mv $fn artifacts
            fi
          done

      - name: Prepare artifacts (macOS)
        if: ${{ github.ref_type != 'tag' && matrix.platform == 'macos-latest'}}
        run: |
          mkdir artifacts
          mv ${{ github.workspace }}/target/**/release/bundle/**/*.dmg artifacts

      - name: Prepare artifacts (Windows)
        if: ${{ github.ref_type != 'tag' && matrix.platform == 'windows-latest'}}
        run: |
          mkdir artifacts
          mv ${{ github.workspace }}/target/**/release/bundle/**/*.exe artifacts
          mv ${{ github.workspace }}/target/**/release/bundle/**/*.sig artifacts

      - name: Upload build artifacts
        if: ${{ github.ref_type != 'tag' }}
        uses: actions/upload-artifact@v4
        with:
          name: BongonCat-${{ matrix.target }}
          path: artifacts
          compression-level: 9

      - name: Build and Release BongoCat
        uses: tauri-apps/tauri-action@v0
        if: ${{ github.ref_type == 'tag' }}
        env:
          CI: false
          PLATFORM: ${{ matrix.platform }}
          GITHUB_TOKEN: ${{ secrets.RELEASE_TOKEN }}
          TAURI_SIGNING_PRIVATE_KEY: ${{ secrets.TAURI_SIGNING_PRIVATE_KEY }}
          TAURI_SIGNING_PRIVATE_KEY_PASSWORD: ${{ secrets.TAURI_SIGNING_PRIVATE_KEY_PASSWORD }}
        with:
          tagName: ${{ github.ref_name }}
          releaseName: BongoCat ${{ github.ref_name }}
          releaseBody: ''
          releaseDraft: true
          prerelease: false
          args: --target ${{ matrix.target }}
